--PHEL--
(ns hello-world
  (:require my-namespace\core)
  (:use my_other-name\test))

(def x :private 10)

(defstruct abc [a])
--PHP--
namespace hello_world;
require_once __DIR__ . '/../my_namespace/core.php';
require_once __DIR__ . '/../phel/core.php';
\Phel\Compiler\Analyzer\Environment\GlobalEnvironmentSingleton::getInstance()->setNs("hello-world");
$GLOBALS["__phel"]["phel\\core"]["*ns*"] = "hello_world";
$GLOBALS["__phel"]["hello_world"]["x"] = 10;
$GLOBALS["__phel_meta"]["hello_world"]["x"] = \Phel\Lang\TypeFactory::getInstance()->persistentMapFromKVs(
  new \Phel\Lang\Keyword("private"), true,
  new \Phel\Lang\Keyword("start-location"), \Phel\Lang\TypeFactory::getInstance()->persistentMapFromKVs(
    new \Phel\Lang\Keyword("file"), "Ns/munge-ns.test",
    new \Phel\Lang\Keyword("line"), 5,
    new \Phel\Lang\Keyword("column"), 0
  ),
  new \Phel\Lang\Keyword("end-location"), \Phel\Lang\TypeFactory::getInstance()->persistentMapFromKVs(
    new \Phel\Lang\Keyword("file"), "Ns/munge-ns.test",
    new \Phel\Lang\Keyword("line"), 5,
    new \Phel\Lang\Keyword("column"), 19
  )
);
class abc extends \Phel\Lang\Collections\Struct\AbstractPersistentStruct {

  protected const ALLOWED_KEYS = ['a'];

  protected $a;

  public function __construct($a, $meta = null) {
    parent::__construct();
    $this->a = $a;
    $this->meta = $meta;
  }
}

$GLOBALS["__phel"]["hello_world"]["abc"] = new class() extends \Phel\Lang\AbstractFn {
  public const BOUND_TO = "hello_world\\abc";

  public function __invoke($a) {
    return (function() use($a) {
      $target_1 = "hello_world\\abc";
      return new $target_1($a);
    })();
  }
};
$GLOBALS["__phel_meta"]["hello_world"]["abc"] = \Phel\Lang\TypeFactory::getInstance()->persistentMapFromKVs(
  new \Phel\Lang\Keyword("doc"), "```phel\n(abc a)\n```\nCreates a new abc struct",
  new \Phel\Lang\Keyword("start-location"), \Phel\Lang\TypeFactory::getInstance()->persistentMapFromKVs(
    new \Phel\Lang\Keyword("file"), "Ns/munge-ns.test",
    new \Phel\Lang\Keyword("line"), 7,
    new \Phel\Lang\Keyword("column"), 0
  ),
  new \Phel\Lang\Keyword("end-location"), \Phel\Lang\TypeFactory::getInstance()->persistentMapFromKVs(
    new \Phel\Lang\Keyword("file"), "Ns/munge-ns.test",
    new \Phel\Lang\Keyword("line"), 7,
    new \Phel\Lang\Keyword("column"), 19
  )
);

$GLOBALS["__phel"]["hello_world"]["abc?"] = new class() extends \Phel\Lang\AbstractFn {
  public const BOUND_TO = "hello_world\\abc?";

  public function __invoke($x) {
    return is_a($x, "hello_world\\abc");
  }
};
$GLOBALS["__phel_meta"]["hello_world"]["abc?"] = \Phel\Lang\TypeFactory::getInstance()->persistentMapFromKVs(
  new \Phel\Lang\Keyword("doc"), "```phel\n(abc? x)\n```\nChecks if `x` is an instance of the abc struct",
  new \Phel\Lang\Keyword("start-location"), \Phel\Lang\TypeFactory::getInstance()->persistentMapFromKVs(
    new \Phel\Lang\Keyword("file"), "Ns/munge-ns.test",
    new \Phel\Lang\Keyword("line"), 7,
    new \Phel\Lang\Keyword("column"), 0
  ),
  new \Phel\Lang\Keyword("end-location"), \Phel\Lang\TypeFactory::getInstance()->persistentMapFromKVs(
    new \Phel\Lang\Keyword("file"), "Ns/munge-ns.test",
    new \Phel\Lang\Keyword("line"), 7,
    new \Phel\Lang\Keyword("column"), 19
  )
);
